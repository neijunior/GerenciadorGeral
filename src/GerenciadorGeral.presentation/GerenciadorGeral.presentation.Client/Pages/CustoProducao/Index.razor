@page "/CustoProducao/Index"

@using GerenciadorGeral.application.DTO;
@using Formatacao
@inject IJSRuntime JSRuntime;
@inject NavigationManager navManager;
@inject GerenciadorGeral.application.Interfaces.ICustoProducaoApp custoProducaoApp;
@rendermode InteractiveAuto

<div class="container">
  <div class="row">
    <div class="col-md-3">
      <div class="card">
        <div class="card-header">Custo massa tradicional</div>
        <div class="card-body">

          <div class="form-group mb-3">
            <label for="Fornecedor">Fornecedor</label>
            @* <InputSelect id="CompraPai" Value="@custoProducao.Id" class="form-control selectpicker">
              
            </InputSelect> *@
          </div>

          @* <option value="" class="dropdown-item">Selecione</option>
          @foreach (var item in ListaFornecedor)
          {
          <option value="@item.Id">@item.RazaoSocial</option>
          } *@

          @* @foreach (var item in listaCustoProducaoModel)
          {
            <div>
              @string.Format("{0} - {1} - {2}", item.skuDTO.Nome, item.qtd.ToString(), item.valorCustoProducao.ToString());
            </div>
          } *@
          @*
          <EditForm Model="@custoProducaoModel" FormName="CustoProducao">
          <DataAnnotationsValidator />
          <ValidationSummary />

          <div class="form-group mb-3">
          <label class="form-label">CPF/CNPJ</label>
          <InputText @bind-Value="fornecedorModel.CpfCnpj" class="form-control"></InputText>
          <ValidationMessage For="()=>fornecedorModel.CpfCnpj"></ValidationMessage>
          </div>

          <div class="form-group mb-3">
          <label class="form-label">RazaoSocial</label>
          <InputText @bind-Value="fornecedorModel.RazaoSocial " class="form-control"></InputText>
          <ValidationMessage For="()=>fornecedorModel.RazaoSocial"></ValidationMessage>
          </div>

          <button type="submit" class="btn btn-success">Salvar</button>
          </EditForm>*@
        </div>
      </div>
    </div>
  </div>
</div>

@code {
  public ICollection<CustoProducaoDTO> listaCustoProducaoModel { get; set; }
  public CustoProducaoDTO custoProducao { get; set; } = new();

  protected override async Task OnInitializedAsync()
  {
    listaCustoProducaoModel = new HashSet<CustoProducaoDTO>();   //await custoProducaoApp.ConsultaCustoPadrao();
    //fornecedorModel = !string.IsNullOrEmpty(id) ? await fornecedorApp.SelectById(Guid.Parse(id)) : fornecedorModel;
  }

  // private async Task EditarFornecedor()
  // {
  //   GerenciadorGeral.domain.Entidades.Fornecedor fornBD = new()
  //     {
  //       Id = fornecedorModel.Id,
  //       RazaoSocial = fornecedorModel.RazaoSocial,
  //       CpfCnpj = fornecedorModel.CpfCnpj.SomenteNumeros()
  //     };

  //   if (string.IsNullOrEmpty(id))
  //   {
  //     fornBD.Id = Guid.NewGuid();
  //     await fornecedorApp.Insert(fornBD);
  //   }
  //   else
  //     await fornecedorApp.Update(fornBD);

  //   navManager.NavigateTo("/Fornecedor/Index");
  // }
}