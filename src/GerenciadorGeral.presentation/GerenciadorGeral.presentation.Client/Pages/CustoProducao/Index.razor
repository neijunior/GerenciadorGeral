@page "/CustoProducao/Index"

@using GerenciadorGeral.application.DTO;
@using Formatacao
@inject IJSRuntime JSRuntime;
@inject NavigationManager navManager;
@inject GerenciadorGeral.application.Interfaces.ICustoProducaoApp custoProducaoApp;
@rendermode InteractiveAuto

<div class="container">
  <div class="row">
    <div class="col-md-9">
      <h3>Custo Produção</h3>
    </div>
    <div class="col-md-3 right">
      <a href="/CustoProducao/Editar" class="btn btn-success">Adicionar</a>
    </div>
  </div>
  <div class="row">
    @foreach (var item in listaCustoProducaoModel)
    {
      <div class="col-md-5">
        <div class="card">
          <div class="card-header">@item.SKU.Nome</div>
          <div class="card-body">
            @if (item.ListaProducaoDetalhe != null && item.ListaProducaoDetalhe.Count() > 0)
            {
              <table class="table table-responsive table-striped">
                <thead>
                  <tr>
                    <th>SKU</th>
                    <th>Qtd. Utilizada</th>
                    <th>Valor Custo</th>
                  </tr>
                </thead>
                <tbody>
                  @foreach (var det in item.ListaProducaoDetalhe)
                  {
                    <tr>
                      <td>@det.SKU.Nome</td>
                      <td>@det.qtdUtilizada.ToString()</td>
                      <td>@det.ValorCustoProducao.ToString()</td>
                    </tr>
                  }
                  <tr>
                    <td colspan="2">Total</td>
                    <td>@item.ListaProducaoDetalhe.Sum(su => su.ValorCustoProducao).ToString()</td>
                  </tr>
                </tbody>

              </table>
            }
          </div>
          <div class="card-footer">
            <a href="/CustoProducao/Editar/@item.Id" class="btn btn-primary">Editar</a>
          </div>
        </div>
      </div>
    }
  </div>
</div>

@code {
  public ICollection<CustoProducaoDTO> listaCustoProducaoModel { get; set; }
  public CustoProducaoDTO custoProducao { get; set; } = new();

  protected override async Task OnInitializedAsync()
  {
    listaCustoProducaoModel = await custoProducaoApp.Listar();
  }

  // private async Task EditarFornecedor()
  // {
  //   GerenciadorGeral.domain.Entidades.Fornecedor fornBD = new()
  //     {
  //       Id = fornecedorModel.Id,
  //       RazaoSocial = fornecedorModel.RazaoSocial,
  //       CpfCnpj = fornecedorModel.CpfCnpj.SomenteNumeros()
  //     };

  //   if (string.IsNullOrEmpty(id))
  //   {
  //     fornBD.Id = Guid.NewGuid();
  //     await fornecedorApp.Insert(fornBD);
  //   }
  //   else
  //     await fornecedorApp.Update(fornBD);

  //   navManager.NavigateTo("/Fornecedor/Index");
  // }
}