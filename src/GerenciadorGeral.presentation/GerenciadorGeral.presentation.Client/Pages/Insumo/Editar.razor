@page "/Insumo/Editar/{id?}"

@using Formatacao;
@using GerenciadorGeral.application.DTO
@inject NavigationManager navManager;
@inject GerenciadorGeral.application.Interfaces.IInsumoApp insumoApp;
@inject GerenciadorGeral.application.Interfaces.IUnidadeMedidaApp unidadeMedidaApp;
@rendermode InteractiveServer

<div class="container">
  <div class="row">
    <div class="col-md-10">
      <div class="card">
        <div class="card-header">Criar Insumo</div>
        <div class="card-body">

          <EditForm Model="@insumoModel" OnValidSubmit="EditarInsumo" FormName="Insumo">

            <div class="form-group mb-3">
              <label class="form-label">Nome</label>
              <InputText @bind-Value="insumoModel.Nome" class="form-control"></InputText>
            </div>

            <div class="form-group mb-3">
              <label for="insumoUnidadeMedida">Unidade Medida</label>
              <InputSelect id="insumoUnidadeMedida" @bind-Value="insumoModel.CodigoUnidadeMedida" class="form-control select-picker">
                <option value="" class="dropdown-item">Selecione</option>
                @foreach (var item in ListaUnidadeMedida)
                {
                  <option value="@item.Codigo">@item.Descricao</option>
                }
              </InputSelect>
              <ValidationMessage For="()=>insumoModel.CodigoUnidadeMedida"></ValidationMessage>
            </div>

            <button type="submit" class="btn btn-success">Salvar</button>
          </EditForm>
        </div>
      </div>
    </div>
  </div>
</div>

@code {

  public InsumoDTO insumoModel { get; set; } = new();
  public ICollection<UnidadeMedidaDTO> ListaUnidadeMedida { get; set; }

  [Parameter] public string id { get; set; }

  protected override async Task OnInitializedAsync()
  {
    ListaUnidadeMedida = await unidadeMedidaApp.SelectAll();
    insumoModel = !string.IsNullOrEmpty(id) ? await insumoApp.Consultar(Guid.Parse(id)) : insumoModel;
  }

  private async Task EditarInsumo()
  {
    await insumoApp.Salvar(insumoModel);
    navManager.NavigateTo("/Insumo/Index");
  }
}