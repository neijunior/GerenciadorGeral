@page "/Insumo/Index"

@using Formatacao
@using GerenciadorGeral.application.DTO
@inject IJSRuntime JSRuntime;
@inject GerenciadorGeral.application.Interfaces.IInsumoApp insumoApp;
@rendermode InteractiveAuto

<h3>Fornecedor</h3>

<a href="/Insumo/Editar" class="btn btn-sucess">Criar</a>

<table class="table table-responsive table-striped">
  <thead>
    <tr>
      <th>Nome</th>
      <th>Ações</th>
    </tr>
  </thead>
  <tbody>
    @if (listaInsumos != null && listaInsumos.Count() > 0)
    {
      foreach (var item in listaInsumos)
      {
        <tr>
          <td>@item.Nome</td>
          <td>
            <a href="/Insumo/Editar/@item.Id" class="btn btn-primary">Editar</a>
            <button class="btn btn-danger" @onclick="async () => Delete(item.Id)">Excluir</button>
          </td>
        </tr>
      }
    }
  </tbody>
</table>

@code {
  ICollection<InsumoDTO> listaInsumos = new HashSet<InsumoDTO>();
  protected override async Task OnInitializedAsync()
  {
    listaInsumos = await PopularInsumos();
  }

  private async Task<ICollection<InsumoDTO>> PopularInsumos()
  {
    return await insumoApp.Listar();
  }

  public async Task Delete(Guid Id)
  {
    bool confirma = await JSRuntime.InvokeAsync<bool>("confirm", "Deseja excluir a Marca?");
    if (!confirma)
      return;

    var marca = await insumoApp.Consultar(Id);

    await insumoApp.Excluir(Id);

    listaInsumos = await PopularInsumos();

    StateHasChanged();
  }
}