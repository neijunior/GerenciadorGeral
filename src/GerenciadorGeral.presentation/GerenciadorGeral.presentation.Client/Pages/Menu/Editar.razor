@page "/Menu/Editar/{id?}"

@using GerenciadorGeral.application.DTO
@inject NavigationManager navManager;
@inject GerenciadorGeral.application.Interfaces.IMenuApp menuApp;
@rendermode InteractiveAuto

<div class="container">
  <div class="row">
    <div class="col-md-10">
      <div class="card">
        <div class="card-header">Criar Menu</div>
        <div class="card-body">

          <EditForm Model="MenuModel" OnValidSubmit="EditarMenu" FormName="Menu">

            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
              <label for="MenuPai">Menu Pai</label>
              <InputSelect id="MenuPai" @bind-Value="MenuModel.IdPai">
                <option value="" class="dropdown-item">Selecione</option>
                @foreach (var item in ListaMenus)
                {
                  <option value="@item.Id">@item.Titulo</option>
                }
              </InputSelect>
            </div>

            <div class="form-group mb-3">
              <label class="form-label">Titulo</label>
              <InputText @bind-Value="MenuModel.Titulo" class="form-control"></InputText>
              <ValidationMessage For="()=>MenuModel.Titulo"></ValidationMessage>
            </div>

            <div class="form-group mb-3">
              <label class="form-label">URL</label>
              <InputText @bind-Value="MenuModel.Url" class="form-control"></InputText>
            </div>

            <div class="form-group mb-3">
              <label class="form-label">Style CSS</label>
              <InputText @bind-Value="MenuModel.styleCss" class="form-control"></InputText>
            </div>

            @* <div class="form-group mb-3">
            <label class="form-label">Ordem</label>
            <InputText @bind-Value="MenuModel.Ordem" class="form-control"></InputText>
            </div> *@

            <button type="submit" class="btn btn-success">Salvar</button>
          </EditForm>
        </div>
      </div>
    </div>
  </div>
</div>

@code {

  public MenuDTO MenuModel { get; set; } = new();
  public ICollection<MenuDTO> ListaMenus { get; set; }

  [Parameter] public string id { get; set; }

  protected override async Task OnInitializedAsync()
  {
    ListaMenus = await menuApp.SelectAll();
    MenuModel = !string.IsNullOrEmpty(id) ? await menuApp.SelectById(Guid.Parse(id)) : MenuModel;
  }

  private async Task EditarMenu()
  {
    if (MenuModel.IdPai.HasValue)
    {
      var pai = await menuApp.SelectById(MenuModel.IdPai.Value);
      MenuModel.Nivel = pai.Nivel + 1;
    }

    GerenciadorGeral.domain.Entidades.Menu MenuBD = new()
      {
        Id = MenuModel.Id,
        IdPai = MenuModel.IdPai,
        Titulo = MenuModel.Titulo,
        Url = MenuModel.Url,
        Ordem = MenuModel.Ordem,
        Nivel = MenuModel.Nivel,
        styleCss = MenuModel.styleCss
      };

    if (string.IsNullOrEmpty(id))
    {
      MenuBD.Id = Guid.NewGuid();
      await menuApp.Insert(MenuBD);
    }
    else
      await menuApp.Update(MenuBD);

    navManager.NavigateTo("/Menu/Index");
  }
}

