@using GerenciadorGeral.application.DTO
@using System.Text
@inject GerenciadorGeral.application.Interfaces.IMenuApp menuApp;

<div class="top-row ps-3 navbar navbar-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="">Gerenciador Geral</a>
  </div>

</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />


<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
  <nav class="flex-column">

    @((MarkupString)menu)

    @* <div class="nav-item px-3">
      <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
      </NavLink>
    </div>

    <div class="nav-item px-3">
      <NavLink class="nav-link" href="Sku/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> SKU
      </NavLink>
    </div>

    <div class="nav-item px-3">
      <NavLink class="nav-link" href="Menu/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Menu
      </NavLink>
    </div>

    <div class="nav-item px-3">
      <NavLink class="nav-link" href="Fornecedor/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Fornecedor
      </NavLink>
    </div>

    <div class="nav-item px-3">
      <NavLink class="nav-link" href="Compra/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Compra
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="Marca/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Marca
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="CustoProducao/Index">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Marca
      </NavLink>
    </div>
 *@
  </nav>
</div>



@code {
  private string _itemMenu = @"<div class='nav-item px-3 {0}' b-orvd6lch9h>
                               <a href='{1}' class='nav-link'>
                               <span class='{2}' aria-hidden='true' b-orvd6lch9h></span> {3}
                               </a>
                               {4}
                               </div>";


  public ICollection<MenuDTO> listaMenu;
  string menu = string.Empty;

  protected override async Task OnInitializedAsync()
  {
    listaMenu = await menuApp.MontarMenu();
    StringBuilder menuMontado = new StringBuilder();
    MontarHtmlMenu(listaMenu, ref menuMontado);
    this.menu = menuMontado.ToString();
  }

  private void MontarHtmlMenu(IEnumerable<MenuDTO> menus, ref StringBuilder html)
  {
    //html.Append("<ul class='navbar-nav mr-auto'>");
    foreach (var item in menus)
    {
      html.AppendLine(MontarItemMenu(item));
    }
    //html.Append("</ul>");
  }

  private string MontarItemMenu(MenuDTO menu)
  {
    string item = string.Empty;

    bool temFilho = menu.Filhos.Count > 0;

    if (menu.Id == menu.IdPai)
      item = string.Format(this._itemMenu, temFilho ? "dropdown" : string.Empty, temFilho ? "#" : menu.Url, menu.styleCss, menu.Titulo, MontarSubMenus(menu));
    else
      item = string.Format(this._itemMenu, temFilho ? "dropdown" : string.Empty, menu.Url, menu.styleCss, menu.Titulo, string.Empty);

    return item;
  }

  private string MontarSubMenus(MenuDTO menu)
  {
    StringBuilder filho = new StringBuilder();
    if (menu.Filhos != null && menu.Filhos.Count > 0)
    {      
      foreach (var f in menu.Filhos)
      {
        filho.AppendLine(MontarItemMenu(f));
      }
    }
    return filho.ToString();
  }

}